#!/usr/bin/env bash
set -Eeuo pipefail
export DEBIAN_FRONTEND=noninteractive NEEDRESTART_SUSPEND=1

LOG=/var/log/base_setup.log
SSH_CFG=/etc/ssh/sshd_config
BKP=.bak

log(){ printf '%(%F %T)T  %s\n' -1 "$*" | tee -a "$LOG"; }
trap 'log "‚ùå –û—à–∏–±–∫–∞ (–∫–æ–¥ $?) –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${BASH_LINENO[0]}"; exit 1' ERR
(( EUID==0 )) || { log "–ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç root"; exit 1; }

# ---------- 1. –ü–∞–∫–µ—Ç—ã --------------------------------------------------------
install_pkgs(){
  log "üì¶ apt update..."
  apt -qq update

  local pkgs=(perl python3 make gcc libnl-3-200 libnl-route-3-200 \
              libnl-3-dev libnl-route-3-dev python3-distutils tcl tk pciutils)

  for p in "${pkgs[@]}"; do
    if dpkg -s "$p" &>/dev/null; then
      log "‚úÖ $p —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
      log "‚Ü™Ô∏è  apt install $p"
      if ! apt -y install "$p" </dev/null; then
        log "‚ö†Ô∏è  $p –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é"
      fi
    fi
  done
}
# ---------- 2. Mellanox ------------------------------------------------------
install_mlx(){
  command -v ofed_info &>/dev/null && { log "‚ÑπÔ∏è  OFED —É–∂–µ –µ—Å—Ç—å ($(ofed_info -s|tr -d '\n'))"; return; }
  local tgz
  tgz=$(find /tmp -maxdepth 1 -name 'MLNX_OFED_LINUX-*.tgz' | sort -V | tail -1 || true)
  [[ $tgz ]] || { log "‚è≠Ô∏è  Mellanox‚Äë–∞—Ä—Ö–∏–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫"; return; }

  log "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ $tgz"
  local wd; wd=$(mktemp -d)
  tar -xf "$tgz" -C "$wd"
  local dir; dir=$(find "$wd" -maxdepth 1 -type d -name 'MLNX_OFED_LINUX-*' | head -1)
  [[ -x $dir/mlnxofedinstall ]] || chmod +x "$dir/mlnxofedinstall"

  log "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OFED (–∂–¥—ë–º)..."
  "$dir/mlnxofedinstall" --force --all --without-python | tee /tmp/mellanox_install.log

  command -v ofed_info &>/dev/null \
    && log "‚úÖ OFED $(ofed_info -s) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" \
    || log "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å /tmp/mellanox_install.log ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞"

  systemctl enable --now openibd 2>/dev/null || true
  rm -rf "$wd"
}
# ---------- 3. SSH -----------------------------------------------------------
ensure_ssh_key(){
  local ak=/root/.ssh/authorized_keys
  mkdir -p /root/.ssh && chmod 700 /root/.ssh

  if [[ -s $ak ]]; then
    log "üîë authorized_keys —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –æ—Å—Ç–∞–≤–ª—è—é –∫–∞–∫ –µ—Å—Ç—å"
    return
  fi

  log "–í—Å—Ç–∞–≤—å –ø—É–±–ª–∏—á–Ω—ã–π SSH‚Äë–∫–ª—é—á –∏ Enter:"
  read -r key
  [[ $key ]] || { log "–ö–ª—é—á –ø—É—Å—Ç–æ–π, –≤—ã—Ö–æ–¥–∏–º"; exit 1; }
  echo "$key" >"$ak" && chmod 600 "$ak"
  log "‚úÖ –ö–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω"
}

configure_ssh(){
  grep -q '^PasswordAuthentication no' "$SSH_CFG" && { log "SSH —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫"; return; }

  [[ -f ${SSH_CFG}$BKP ]] || cp "$SSH_CFG" "${SSH_CFG}$BKP"

  cat >"$SSH_CFG" <<'EOF'
Port 22
Protocol 2
PermitRootLogin prohibit-password
PasswordAuthentication no
KbdInteractiveAuthentication no
UsePAM yes
AuthenticationMethods publickey
Subsystem sftp /usr/lib/openssh/sftp-server
EOF

  log "üß™ sshd -t"; sshd -t
  local svc; svc=$(systemctl list-unit-files | awk '/^ssh[d]?\.service/{sub(/\.service/,"");print;exit}')
  svc=${svc:-ssh}
  systemctl restart "$svc"
  systemctl is-active --quiet "$svc" && log "‚úÖ SSH –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω" \
                      || { mv "${SSH_CFG}$BKP" "$SSH_CFG"; systemctl restart "$svc"; log "‚ùå –û—Ç–∫–∞—Ç–∏–ª –∫–æ–Ω—Ñ–∏–≥"; }
}
# ---------- 4. –§–∏–Ω–∞–ª ---------------------------------------------------------
finish(){
  log "üì¶ apt upgrade/autoremove"
  apt -qq update && apt -y upgrade && apt -y autoremove
  log "üèÅ –ì–æ—Ç–æ–≤–æ. Enter¬†‚Äî –∏ —Ä–µ–±—É—Ç."
  read -r
  rm -- "$0"
  reboot
}

# ---------- main -------------------------------------------------------------
install_pkgs
install_mlx
ensure_ssh_key
configure_ssh
finish
